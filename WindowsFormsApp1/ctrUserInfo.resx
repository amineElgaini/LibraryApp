<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="backgroundWorker1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxUserImage.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>